version: '3.4'

networks:
  default:
  backend:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - '/etc/letsencrypt:/etc/letsencrypt'
    depends_on:
      - apigateway
      - frontend
    networks:
      - default

  frontend:
    build:
      context: ./web-version
    networks:
      - default

  rabbitmq:
    image: masstransit/rabbitmq:latest
    ports:
      - 5672:5672
      - 15672:15672
    env_file: ./.env
    networks:
      - backend
  
  apigateway:
    build:
      context: ./server-side/!new
      dockerfile: ApiGateway/Dockerfile
      args:
        - BUILD_CONFIGURATION=Development
    depends_on:
      - identityapi
      - cardsapi
    env_file: ./.env
    networks:
      - backend
      - default

  identityapi:
    build:
      context: ./server-side/!new
      dockerfile: /IdentityService/Dockerfile
      args:
        - BUILD_CONFIGURATION=Development
    ports:
      - 7001:7001
    depends_on:
      - rabbitmq
      - postgres
    env_file: ./.env
    networks:
      - backend

  cardsapi:
    build:
      context: ./server-side/!new
      dockerfile: /CardsService/Dockerfile
      args:
        - BUILD_CONFIGURATION=Development
    ports:
      - 7002:7002
    depends_on:
      - rabbitmq
      - postgres
    env_file: ./.env
    # environment:
    #   - DatabaseConnection=${DB_CONNECTION}
    networks:
      - backend

  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    env_file: ./.env
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - backend